
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author Omar Ismail
 */
public class gui_flightsInfo extends javax.swing.JFrame {

    /**
     * Creates new form test
     */
    public gui_flightsInfo() throws IOException, Exception {
        
        load();
        initComponents();
        populateTable();
         

    }

    public void load() throws Exception {
        try {

            String filePathFlights = "src/Flights.txt";

            ObjectMapper objectMapper = new ObjectMapper();

            String _flights = new String(Files.readAllBytes(Paths.get(filePathFlights)));
            ArrayList<Flight> flights = objectMapper.readValue(_flights, new TypeReference<ArrayList<Flight>>() {
            });

            Flight.flights = flights;

        } catch (Exception e) {
            throw e;
        }
    }

    public void populateTable() throws IOException {
        String columns[] = {"flightNumber",
            "departureLocation",
            "arrivalLocation",
            "departureTime",
            "arrivalTime",
            "status",
            "origin",
            "destination",
            "fare",
            "distance"
        };

        String[][] data = new String[Flight.flights.size()][];
        for (int i = 0; i < Flight.flights.size(); i++) {
            Flight flight = Flight.flights.get(i);
            data[i] = new String[]{
                flight.getFlightNumber(),
                flight.getDepartureLocation(),
                flight.getArrivalLocation(),
                flight.getDepartureTime(),
                flight.getArrivalTime(),
                flight.getStatus(),
                flight.getOrigin(),
                flight.getDestination(),
                String.valueOf(flight.getFare()),
                String.valueOf(flight.getDistance())
            };
        }
        DefaultTableModel model = new DefaultTableModel(data, columns);
        jTable1.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jBackButton = new javax.swing.JButton();
        jSearchButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLableRegister = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jBackButton.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jBackButton.setText("Back");
        jBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBackButtonActionPerformed(evt);
            }
        });

        jSearchButton.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jSearchButton.setText("Edit Flight");
        jSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSearchButtonActionPerformed(evt);
            }
        });

        jTable1.setBackground(new java.awt.Color(0, 0, 0));
        jTable1.setForeground(new java.awt.Color(255, 255, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLableRegister.setBackground(new java.awt.Color(255, 255, 255));
        jLableRegister.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        jLableRegister.setForeground(new java.awt.Color(255, 255, 255));
        jLableRegister.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLableRegister.setText("Update Flight");
        jLableRegister.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLableRegister, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jBackButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(238, 238, 238)
                        .addComponent(jSearchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 758, Short.MAX_VALUE))
                .addGap(50, 50, 50))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLableRegister, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                .addGap(61, 61, 61)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSearchButtonActionPerformed

        String filePath = "src/Flights.txt";

        ArrayList<String> updatedFlightData = new ArrayList<String>();
        ArrayList<String> seats = new ArrayList<String>();
        ObjectMapper objectMapper = new ObjectMapper();

        System.out.println(seats);
        try {
            for (int count = 0; count < jTable1.getRowCount(); count++) {

                StringBuilder jsonBuilder = new StringBuilder("{");
                jsonBuilder.append("\"flightNumber\":\"").append(jTable1.getValueAt(count, 0)).append("\",");
                jsonBuilder.append("\"departureLocation\":\"").append(jTable1.getValueAt(count, 1)).append("\",");
                jsonBuilder.append("\"arrivalLocation\":\"").append(jTable1.getValueAt(count, 2)).append("\",");
                jsonBuilder.append("\"departureTime\":\"").append(jTable1.getValueAt(count, 3)).append("\",");
                jsonBuilder.append("\"arrivalTime\":\"").append(jTable1.getValueAt(count, 4)).append("\",");
                jsonBuilder.append("\"status\":\"").append(jTable1.getValueAt(count, 5)).append("\",");
                jsonBuilder.append("\"origin\":\"").append(jTable1.getValueAt(count, 6)).append("\",");
                jsonBuilder.append("\"destination\":\"").append(jTable1.getValueAt(count, 7)).append("\",");
                jsonBuilder.append("\"fare\":").append(jTable1.getValueAt(count, 8)).append(",");
                jsonBuilder.append("\"seats\":").append((objectMapper.writeValueAsString(Flight.flights.get(count).getSeats()))).append(",");;
                jsonBuilder.append("\"distance\":").append(jTable1.getValueAt(count, 9)).append("}");

                updatedFlightData.add(jsonBuilder.toString());

            }
            System.out.println(updatedFlightData.toString());
            BufferedWriter writer = new BufferedWriter(new FileWriter(filePath));
            writer.write(updatedFlightData.toString());
            writer.close();

        } catch (JsonProcessingException ex) {
            Logger.getLogger(gui_flightsInfo.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(gui_flightsInfo.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jSearchButtonActionPerformed

    private void jBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBackButtonActionPerformed
        new gui_admin().setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_jBackButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(gui_flightsInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(gui_flightsInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(gui_flightsInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(gui_flightsInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new gui_flightsInfo().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(gui_flightsInfo.class.getName()).log(Level.SEVERE, null, ex);
                } catch (Exception ex) {
                    Logger.getLogger(gui_flightsInfo.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBackButton;
    private javax.swing.JLabel jLableRegister;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jSearchButton;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
