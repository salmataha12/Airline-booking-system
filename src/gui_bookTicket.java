
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author Omar Ismail
 */
public class gui_bookTicket extends javax.swing.JFrame {

    private int tableIndex = -1;

    /**
     * Creates new form gui_bookTcket
     */
    public gui_bookTicket() throws IOException, Exception {
        load();
        initComponents();
        populateTable();
        setLocationRelativeTo(null);
    }

    public void load() throws Exception {
        try {
            String filePathUsers = "src/Database.txt";
            String filePathFlights = "src/Flights.txt";

            ObjectMapper objectMapper = new ObjectMapper();

            String _users = new String(Files.readAllBytes(Paths.get(filePathUsers)));
            ArrayList<Person> pers = objectMapper.readValue(_users, new TypeReference<ArrayList<Person>>() {
            });

            String _flights = new String(Files.readAllBytes(Paths.get(filePathFlights)));
            ArrayList<Flight> flights = objectMapper.readValue(_flights, new TypeReference<ArrayList<Flight>>() {
            });

            Person.persons = pers;
            Flight.flights = flights;

        } catch (Exception e) {
            throw e;
        }
    }

    public void populateTable() throws IOException {
        String columns[] = {"FlightNumber",
            "Origin",
            "Departure Time",
            "Destination",
            "seat Status",
            "Seat number",};

        // 1
        int total = 0;
        for (int i = 0; i < Flight.flights.size(); i++) {
            total += Flight.flights.size() * Flight.flights.get(i).getSeats().size();
        }

        System.out.println(total);

        String[][] data = new String[total][];
        int count = 0;
        for (int i = 0; i < Flight.flights.size(); i++) {
            for (int j = 0; j < Flight.flights.get(i).getSeats().size(); j++) {
                Flight flight = Flight.flights.get(i);
                data[count] = new String[]{
                    flight.getFlightNumber(),
                    flight.getOrigin(),
                    flight.getDepartureTime(),
                    flight.getDestination(),
                    flight.getSeats().get(j).getSeatStatus() ? "true" : "false",
                    String.valueOf(flight.getSeats().get(j).getSeatNumber())
                };
                count++;
            }

        }

        DefaultTableModel model = new DefaultTableModel(data, columns);
        jTable1.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new java.awt.Panel();
        jLableRegister = new javax.swing.JLabel();
        jBookTicket = new javax.swing.JButton();
        jBackButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(0, 0, 60, 80));
        setMinimumSize(new java.awt.Dimension(60, 80));

        panel1.setBackground(new java.awt.Color(106, 0, 28));
        panel1.setForeground(new java.awt.Color(34, 45, 65));
        panel1.setMinimumSize(new java.awt.Dimension(60, 80));

        jLableRegister.setBackground(new java.awt.Color(0, 0, 0));
        jLableRegister.setFont(new java.awt.Font("Script MT Bold", 1, 36)); // NOI18N
        jLableRegister.setForeground(new java.awt.Color(255, 255, 255));
        jLableRegister.setText("Book Your Ticket");
        jLableRegister.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jBookTicket.setText("Book Ticket");
        jBookTicket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBookTicketActionPerformed(evt);
            }
        });

        jBackButton1.setText("Back");
        jBackButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBackButton1ActionPerformed(evt);
            }
        });

        jTable1.setBackground(new java.awt.Color(34, 45, 65));
        jTable1.setForeground(new java.awt.Color(255, 255, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setGridColor(new java.awt.Color(255, 255, 255));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addComponent(jBackButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBookTicket, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 655, Short.MAX_VALUE))
                .addGap(60, 60, 60))
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(209, 209, 209)
                .addComponent(jLableRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLableRegister, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE)
                .addGap(24, 24, 24)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBackButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBookTicket, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(56, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBookTicketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBookTicketActionPerformed
        try {
            ManageFlight manage = new ManageFlight();

            String origin = (String) jTable1.getValueAt(tableIndex, 1);
            String DepartureTime = (String) jTable1.getValueAt(tableIndex, 2);
            String destination = (String) jTable1.getValueAt(tableIndex, 3);
            int seatNumber = Integer.parseInt((String) jTable1.getValueAt(tableIndex, 5));

            manage.bookTicket(origin.trim(), destination.trim(), DepartureTime.trim(), seatNumber);
            
            JOptionPane.showMessageDialog(null,
                    "Seat Number: " + seatNumber + " is booked",
                    "Your ticket is succefully booked", JOptionPane.INFORMATION_MESSAGE);
            
            load();
            populateTable();
            
        } catch (IOException ex) {
            Logger.getLogger(gui_bookTicket.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(gui_bookTicket.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jBookTicketActionPerformed

    private void jBackButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBackButton1ActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jBackButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        tableIndex = jTable1.getSelectedRow();
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(gui_bookTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(gui_bookTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(gui_bookTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(gui_bookTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new gui_bookTicket().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(gui_bookTicket.class.getName()).log(Level.SEVERE, null, ex);
                } catch (Exception ex) {
                    Logger.getLogger(gui_bookTicket.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBackButton1;
    private javax.swing.JButton jBookTicket;
    private javax.swing.JLabel jLableRegister;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private java.awt.Panel panel1;
    // End of variables declaration//GEN-END:variables
}
